# Legacy test suites - commented out due to syntax errors
# load(":repositories_test.bzl", "repositories_test_suite")
# load(":generate_test.bzl", "weaver_generate_test_suite")
# load(":integration_test.bzl", "weaver_generate_integration_test_suite")
# load(":validate_test.bzl", "weaver_validate_test_suite")
# load(":validate_integration_test.bzl", "weaver_validate_integration_test_suite")
# load(":toolchain_test.bzl", "weaver_toolchain_test_suite")
# load(":toolchain_integration_test.bzl", "toolchain_integration_test_suite")
# load(":schema_test.bzl", "weaver_schema_test_suite")
# load(":schema_integration_test.bzl", "weaver_schema_integration_test_suite")
# load(":remote_execution_test.bzl", "weaver_remote_execution_test_suite")
# load(":performance_test.bzl", "weaver_performance_test_suite")
# load(":dependency_test.bzl", "dependency_test_suite")
# load(":dependency_integration_test.bzl", "dependency_integration_test_suite")
# load(":dependency_performance_test.bzl", "dependency_performance_test_suite")
# load(":docs_test.bzl", "weaver_docs_test_suite")
# load(":docs_integration_test.bzl", "weaver_docs_integration_test_suite")

# Load unittest for test targets
load("@bazel_skylib//lib:unittest.bzl", "unittest")

# Comprehensive testing framework - commented out due to syntax errors
# load(":test_utils.bzl", "create_test_suite", "run_test_suite")
# load(":unit_test_framework.bzl", 
#      "provider_test_suite",
#      "rule_test_suite", 
#      "action_test_suite",
#      "performance_test_suite",
#      "error_test_suite",
#      "comprehensive_unit_test_suite")
# load(":integration_test_framework.bzl",
#      "workflow_test_suite",
#      "dependency_test_suite",
#      "caching_test_suite", 
#      "remote_execution_test_suite",
#      "comprehensive_integration_test_suite")
# load(":performance_test_framework.bzl",
#      "large_schema_test_suite",
#      "incremental_build_test_suite",
#      "benchmark_test_suite",
#      "comprehensive_performance_test_suite")
# load(":error_test_framework.bzl",
#      "invalid_schema_test_suite",
#      "missing_dependency_test_suite",
#      "configuration_error_test_suite",
#      "platform_error_test_suite",
#      "comprehensive_error_test_suite")
# load(":comprehensive_test_runner.bzl",
#      "coverage_test_suite",
#      "orchestration_test_suite",
#      "aggregation_test_suite",
#      "integration_test_suite",
#      "comprehensive_test_runner_suite")
# load(":multi_platform_test.bzl", "multi_platform_test_suite")
# load(":platform_integration_test.bzl", "platform_integration_test_suite")

package(default_visibility = ["//visibility:public"])

# =============================================================================
# Legacy Test Targets - commented out due to syntax errors
# =============================================================================

# repositories_test_suite(name = "repositories_test")
# weaver_generate_test_suite(name = "generate_test")
# weaver_generate_integration_test_suite(name = "generate_integration_test")
# weaver_validate_test_suite(name = "validate_test")
# weaver_validate_integration_test_suite(name = "validate_integration_test")
# weaver_toolchain_test_suite(name = "toolchain_test")
# toolchain_integration_test_suite(name = "toolchain_integration_test")
# weaver_schema_test_suite(name = "schema_test")
# weaver_schema_integration_test_suite(name = "schema_integration_test")
# weaver_remote_execution_test_suite(name = "remote_execution_test")
# weaver_performance_test_suite(name = "performance_test")
# dependency_test_suite(name = "dependency_test")
# dependency_integration_test_suite(name = "dependency_integration_test")
# dependency_performance_test_suite(name = "dependency_performance_test")
# weaver_docs_test_suite(name = "docs_test")
# weaver_docs_integration_test_suite(name = "docs_integration_test")

# =============================================================================
# Comprehensive Testing Framework Targets - commented out due to syntax errors
# =============================================================================

# Unit Testing Framework
# unittest.make(name = "unit_provider_test", suite = provider_test_suite)
# unittest.make(name = "unit_rule_test", suite = rule_test_suite)
# unittest.make(name = "unit_action_test", suite = action_test_suite)
# unittest.make(name = "unit_performance_test", suite = performance_test_suite)
# unittest.make(name = "unit_error_test", suite = error_test_suite)
# unittest.make(name = "comprehensive_unit_test", suite = comprehensive_unit_test_suite)

# Integration Testing Framework
# unittest.make(name = "integration_workflow_test", suite = workflow_test_suite)
# unittest.make(name = "integration_dependency_test", suite = dependency_test_suite)
# unittest.make(name = "integration_caching_test", suite = caching_test_suite)
# unittest.make(name = "integration_remote_execution_test", suite = remote_execution_test_suite)
# unittest.make(name = "comprehensive_integration_test", suite = comprehensive_integration_test_suite)

# Performance Testing Framework
# unittest.make(name = "performance_large_schema_test", suite = large_schema_test_suite)
# unittest.make(name = "performance_incremental_build_test", suite = incremental_build_test_suite)
# unittest.make(name = "performance_benchmark_test", suite = benchmark_test_suite)
# unittest.make(name = "comprehensive_performance_test", suite = comprehensive_performance_test_suite)

# Error Scenario Testing Framework
# unittest.make(name = "error_invalid_schema_test", suite = invalid_schema_test_suite)
# unittest.make(name = "error_missing_dependency_test", suite = missing_dependency_test_suite)
# unittest.make(name = "error_configuration_test", suite = configuration_error_test_suite)
# unittest.make(name = "error_platform_test", suite = platform_error_test_suite)
# unittest.make(name = "comprehensive_error_test", suite = comprehensive_error_test_suite)

# Test Runner Framework
# unittest.make(name = "test_coverage_test", suite = coverage_test_suite)
# unittest.make(name = "test_orchestration_test", suite = orchestration_test_suite)
# unittest.make(name = "test_aggregation_test", suite = aggregation_test_suite)
# unittest.make(name = "test_integration_test", suite = integration_test_suite)
# unittest.make(name = "comprehensive_test_runner", suite = comprehensive_test_runner_suite)

# =============================================================================
# Real Weaver Integration Tests
# =============================================================================

# Real Weaver tests are now in utils/
# See //tests/utils:simple_real_weaver_test and //tests/utils:simple_real_weaver_generate

# =============================================================================
# Mock Weaver Setup for Testing
# =============================================================================

# Mock Weaver setup is now in utils/
# See //tests/utils:mock_weaver and //tests/utils:mock_weaver_toolchain

# Integration test targets
# load(":integration_test_targets.bzl", "create_integration_test_targets")
# create_integration_test_targets()

# Simple integration tests
# load(":simple_integration_test.bzl", "simple_integration_test_suite")
# unittest.make(name = "simple_integration_test", suite = simple_integration_test_suite)

# =============================================================================
# Test Suite Collections
# =============================================================================

# All unit tests
test_suite(
    name = "all_unit_tests",
    tests = [
        "//tests/unit:all_unit_tests",
    ],
)

# All integration tests
test_suite(
    name = "all_integration_tests",
    tests = [
        "//tests/integration:all_integration_tests",
        "//tests/utils:all_utils_tests",
        "//tests/e2e:e2e_test_suite",
    ],
)

# All performance tests
test_suite(
    name = "all_performance_tests",
    tests = [
        "//tests/performance:all_performance_tests",
    ],
)

# All error scenario tests
test_suite(
    name = "all_error_tests",
    tests = [
        "//tests/error:all_error_tests",
    ],
)

# All framework tests
test_suite(
    name = "all_framework_tests",
    tests = [
        "//tests/frameworks:all_framework_tests",
    ],
)

# Comprehensive test suite (all tests)
test_suite(
    name = "comprehensive_test_suite",
    tests = [
        ":all_unit_tests",
        ":all_integration_tests",
        ":all_performance_tests",
        ":all_error_tests",
        ":all_framework_tests",
    ],
)
# multi_platform_test_suite(name = "multi_platform_test")
# platform_integration_test_suite(name = "platform_integration_test") 